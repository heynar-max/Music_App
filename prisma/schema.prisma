// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model Playlist {
  id       String  @id @default(uuid()) // Si es un string, usa UUID
  albumId  Int
  title    String
  cover    String
  artists  String[]  // Arrays en Prisma usan `String[]`
  genre    String?

  Favorites FavoritePlaylist[]
}

model Song {
  id        Int    @id @default(autoincrement())
  albumId   Int
  title     String
  image     String
  artists   String[]
  album     String
  duration  String
  genre     String?
  audioUrl  String

}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(user)
  image         String?

  Favorites FavoritePlaylist[]
}

// se migra a la base de datos
// npx prisma migrate dev --name user-role

model FavoritePlaylist {
  id          String   @id @default(uuid())
  userId      String
  playlistId  String
  createdAt   DateTime @default(now())

  user        User   @relation(fields: [userId], references: [id])
  playlist    Playlist  @relation(fields: [playlistId], references: [id])

  @@unique([userId, playlistId])
}

// npx prisma migrate dev --name add-favorites 